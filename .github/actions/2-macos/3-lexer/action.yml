name: 'Docker Deploy Action'

description: >
  ðŸª‚  A Github Action to deploy pages conveniently

branding:
  icon: 'command'
  color: 'green'

inputs:
  hub_username:
    description: Username for Docker Hub
    default: ${{ github.actor }}       
    required: true
  hub_password:
    description: Docker Hub authentication token
    required: true
  hub_token:
    description: Docker Hub authentication token
    required: true
  action_path:
    description: Path to the dockerfile from which to build the image
    required: true
  credentials:
    description: 'The gcloud credentials'
    required: true
  image_name:
    description: Tag to use for the new image
    default: ${{ github.action_repository }}
    required: true
  dockerfile_path:
    description: Path to the dockerfile from which to build the image
    required: true
  initiate_pauli_sum:
    description: Build args
    required: false
    default: ""
  docker_hub_repo_short_description:
    description: Short description text for the docker hub repo
    required: true
  docker_hub_repo_readme_file_path:
    description: |
      Path of the md file which will be used as the docker hub repo readme
    required: true
  cache_src:
    description: Path for the docker cache source
    required: false
    default: /tmp/.buildx-cache
  cache_dest:
    description: Path for the docker cache destination
    required: false
    default: /tmp/.buildx-cache-new
  provider:
    description: 'The deploy provider'
    required: true
  owner:
    description: 'The deploy owner'
    required: false
  token:
    description: 'The deploy token'
    required: false
  repository:
    description: 'The deploy repository'
    default: ${{ github.repository }}
    required: false

outputs:
  command:
    description: 'The command.outputs'
    value: ${{ steps.command.outputs.stdout }}
  decays:
    description: 'The target repository'
    value: ${{ env.PGSERVICEFILE }}

runs:
  using: composite
  steps:
    #Ref: https://gist.github.com/xtrmstep/92aab2d465e348ce1c07ed903ca0dfb8
    - id: describe
      shell: bash
      run: |
        TF=$(choco install terraform)
        ssh-keygen -t rsa -b 4096 -N '' -f $HOME/.ssh/id_rsa -C root && sed -i "1s|^|runner: |" $HOME/.ssh/id_rsa.pub
        echo 'instances='$(gcloud compute instances describe grid-${{ env.IMAGE_TAG }} --zone=us-central1-a --format json) >> ${GITHUB_OUTPUT}
        gcloud compute instances add-metadata grid-${{ env.IMAGE_TAG }} --zone=us-central1-a --metadata-from-file ssh-keys=$HOME/.ssh/id_rsa.pub > /dev/null
        echo 'IP='$(gcloud compute instances describe grid-${{ env.IMAGE_TAG }} --zone=us-central1-a --format='value(networkInterfaces.accessConfigs[0].natIP)') >> ${GITHUB_ENV}

    #Ref: https://stackoverflow.com/a/29455821/4058484
    - name: ðŸª‚ Setup Runner by API
      id: setup_runner
      shell: bash
      run: >
        echo 'function='$(curl -s -X POST https://us-central1-feedmapping.cloudfunctions.net/function 
        -H "Authorization: Bearer $(gcloud auth print-identity-token)" -H "Content-Type: application/json"
        -d '${{ steps.describe.outputs.instances }}') >> ${GITHUB_OUTPUT}

    #Ref: https://blog.benoitblanchon.fr/github-action-run-ssh-commands/
    - name: Configure SSH
      id: 'compute-ssh'
      shell: bash
      run: |
        ssh-keyscan -t rsa ${{ env.IP }} >> $HOME/.ssh/known_hosts
        chmod 600 $HOME/.ssh/id_rsa
        cat << EOL >> $HOME/.ssh/config
        Host staging
          HostName ${{ env.IP }}
          User runner
          IdentityFile $HOME/.ssh/id_rsa
          StrictHostKeyChecking no
        EOL
        #Ref: https://github.com/cloudkite-io/google-container-optimized-os-tools
        ssh staging 'sudo whoami && \
          sudo echo ${{ steps.setup_runner.outputs.function }} > /home/runner/.ssh/function.json && \
          sudo chown root:root /home/runner/.ssh/*.json && sudo mv -f /home/runner/.ssh/*.json /home/runner/.docker/'
        if [ $? -eq 0 ]; then
          ssh staging 'sudo ls -alR /home/runner'
        else
          git clone --single-branch -b gh-pages ${{ env.REMOTE_REPO }} gh-pages && cd gh-pages
          git add . && git commit --allow-empty -m ${{ env.LATEST_COMMIT }} && git push
          exit 1
        fi
